{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport ShoppingCart from \"../Components/GoodInCart\";\nimport { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShoppingCartPage = _ref => {\n  _s();\n\n  let {\n    dishes,\n    cart,\n    setCart\n  } = _ref;\n  const [dishesNum, setDishesNum] = useState([]);\n  const [cartForMap, setCartForMap] = useState([]);\n  useEffect(() => {\n    let dishesNumTemp = [];\n    let cartForMapTemp = [];\n\n    for (let i = 0; i < dishes.length; i++) {\n      let existNote = [];\n\n      for (let j = 0; j < cart[dishes[i].name].length; j++) {\n        // have been calculated before\n        if (existNote.indexOf(cart[dishes[i].name][j]) !== -1) continue;\n        let thisNoteNum = 0;\n\n        for (let k = 0; k < cart[dishes[i].name].length; k++) {\n          if (cart[dishes[i].name][j] === cart[dishes[i].name][k]) thisNoteNum += 1;\n        }\n\n        dishesNumTemp.push(thisNoteNum);\n        existNote.push(cart[dishes[i].name][j]); // index 0 : the info of this dish, including name, ime, etc\n        // index 1 : the note of this dish\n\n        cartForMapTemp.push([dishes[i], cart[dishes[i].name][j]]);\n      }\n    }\n\n    setCartForMap(cartForMapTemp);\n    setDishesNum(dishesNumTemp);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: {\n      /* cartForMap.map((order, idx)=><ShoppingCart name={order[0].name} image={order[0].image} note={order[1]} number={dishesNum[idx]} cart={cart} setCart={setCart}></ShoppingCart>) */\n    }\n  }, void 0, false);\n};\n\n_s(ShoppingCartPage, \"UwPEFTb2Id+pdCsRHnts8T9SVAc=\");\n\n_c = ShoppingCartPage;\nexport default ShoppingCartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShoppingCartPage\");","map":{"version":3,"sources":["/mnt/c/Users/Evan/Desktop/SDM/project/frontend/src/Containers/ShoppingCartPage.js"],"names":["ShoppingCart","useState","useEffect","ShoppingCartPage","dishes","cart","setCart","dishesNum","setDishesNum","cartForMap","setCartForMap","dishesNumTemp","cartForMapTemp","i","length","existNote","j","name","indexOf","thisNoteNum","k","push"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,0BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;;AAEA,MAAMC,gBAAgB,GAAG,QAA4B;AAAA;;AAAA,MAA3B;AAACC,IAAAA,MAAD;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAA2B;AAEpD,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIS,aAAa,GAAG,EAApB;AACA,QAAIC,cAAc,GAAG,EAArB;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,MAAM,CAACU,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACrC,UAAIE,SAAS,GAAG,EAAhB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGX,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBH,MAAxC,EAAgDE,CAAC,EAAjD,EAAoD;AACnD;AACA,YAAGD,SAAS,CAACG,OAAV,CAAkBb,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBD,CAArB,CAAlB,MAA+C,CAAC,CAAnD,EACC;AACD,YAAIG,WAAW,GAAG,CAAlB;;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGf,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBH,MAAxC,EAAgDM,CAAC,EAAjD,EAAoD;AACnD,cAAGf,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBD,CAArB,MAA4BX,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBG,CAArB,CAA/B,EACCD,WAAW,IAAI,CAAf;AACD;;AACDR,QAAAA,aAAa,CAACU,IAAd,CAAmBF,WAAnB;AACAJ,QAAAA,SAAS,CAACM,IAAV,CAAehB,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBD,CAArB,CAAf,EAVmD,CAWnD;AACA;;AACAJ,QAAAA,cAAc,CAACS,IAAf,CAAoB,CAACjB,MAAM,CAACS,CAAD,CAAP,EAAYR,IAAI,CAACD,MAAM,CAACS,CAAD,CAAN,CAAUI,IAAX,CAAJ,CAAqBD,CAArB,CAAZ,CAApB;AACA;AACD;;AACDN,IAAAA,aAAa,CAACE,cAAD,CAAb;AACAJ,IAAAA,YAAY,CAACG,aAAD,CAAZ;AACA,GAvBQ,EAuBN,EAvBM,CAAT;AAyBA,sBACC;AAAA,cACA;AAAC;AAAD;AADA,mBADD;AAKA,CAnCD;;GAAMR,gB;;KAAAA,gB;AAqCN,eAAeA,gBAAf","sourcesContent":["import ShoppingCart from \"../Components/GoodInCart\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nconst ShoppingCartPage = ({dishes, cart, setCart}) =>{\r\n\r\n\tconst [dishesNum, setDishesNum] = useState([])\r\n\tconst [cartForMap, setCartForMap] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tlet dishesNumTemp = []\r\n\t\tlet cartForMapTemp = []\r\n\t\tfor(let i = 0; i < dishes.length; i++){\r\n\t\t\tlet existNote = []\r\n\t\t\tfor(let j = 0; j < cart[dishes[i].name].length; j++){\r\n\t\t\t\t// have been calculated before\r\n\t\t\t\tif(existNote.indexOf(cart[dishes[i].name][j]) !== -1)\r\n\t\t\t\t\tcontinue\r\n\t\t\t\tlet thisNoteNum = 0\r\n\t\t\t\tfor(let k = 0; k < cart[dishes[i].name].length; k++){\r\n\t\t\t\t\tif(cart[dishes[i].name][j] === cart[dishes[i].name][k])\r\n\t\t\t\t\t\tthisNoteNum += 1\r\n\t\t\t\t}\r\n\t\t\t\tdishesNumTemp.push(thisNoteNum)\r\n\t\t\t\texistNote.push(cart[dishes[i].name][j])\r\n\t\t\t\t// index 0 : the info of this dish, including name, ime, etc\r\n\t\t\t\t// index 1 : the note of this dish\r\n\t\t\t\tcartForMapTemp.push([dishes[i], cart[dishes[i].name][j]])\r\n\t\t\t}\r\n\t\t}\t\r\n\t\tsetCartForMap(cartForMapTemp)\r\n\t\tsetDishesNum(dishesNumTemp)\t\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>{\r\n\t\t{/* cartForMap.map((order, idx)=><ShoppingCart name={order[0].name} image={order[0].image} note={order[1]} number={dishesNum[idx]} cart={cart} setCart={setCart}></ShoppingCart>) */}\r\n\t\t}</>\r\n\t)\r\n}\r\n\r\nexport default ShoppingCartPage"]},"metadata":{},"sourceType":"module"}