{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Evan/Desktop/SDM/project/frontend/src/Containers/Menu.js\",\n    _s = $RefreshSig$();\n\nimport AnimateButton from \"../Components/AnimateButton\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dishes = [{\n  title: \"義大利麵\",\n  image: \"./1.jpg\",\n  type: \"主食\"\n}];\n\nconst Menu = () => {\n  _s();\n\n  const [dishType, setDishType] = useState(\"\");\n  const [allTypeName, setAllTypeName] = useState([]);\n  const [allTypeImage, setAllTypeImage] = useState([]);\n  useEffect(() => {\n    for (let i = 0; i < dishes.length; i++) {\n      if (!dishes[i].type in allTypeName === false) {\n        setAllTypeName([...allTypeName, dishes[i].type]);\n        setAllTypeImage([...allTypeImage, dishes[i].image]);\n      }\n    }\n  }, []);\n\n  const onClick_dishType = (e, type) => {\n    console.log(type);\n    setDishType(type);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: dishType === \"\" ? dishes.map(dish => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => onClick_dishType(e, dish.type),\n      children: /*#__PURE__*/_jsxDEV(AnimateButton, {\n        imageUrl: dish.image,\n        imageTitle: dish.title,\n        imageWidth: \"30%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"nothing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_s(Menu, \"e4fs3g0U0JEucVueXiaWWwsKGtQ=\");\n\n_c = Menu;\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/mnt/c/Users/Evan/Desktop/SDM/project/frontend/src/Containers/Menu.js"],"names":["AnimateButton","useState","useEffect","dishes","title","image","type","Menu","dishType","setDishType","allTypeName","setAllTypeName","allTypeImage","setAllTypeImage","i","length","onClick_dishType","e","console","log","map","dish"],"mappings":";;;AAAA,OAAOA,aAAP,MAA0B,6BAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAmC,OAAnC;;;AAGA,MAAMC,MAAM,GAAG,CACd;AAACC,EAAAA,KAAK,EAAC,MAAP;AAAeC,EAAAA,KAAK,EAAC,SAArB;AAAgCC,EAAAA,IAAI,EAAC;AAArC,CADc,CAAf;;AAOA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AAEjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,MAAM,CAACY,MAA3B,EAAmCD,CAAC,EAApC,EAAuC;AACtC,UAAG,CAACX,MAAM,CAACW,CAAD,CAAN,CAAUR,IAAX,IAAmBI,WAAnB,KAAmC,KAAtC,EAA4C;AAC3CC,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBP,MAAM,CAACW,CAAD,CAAN,CAAUR,IAA3B,CAAD,CAAd;AACAO,QAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBT,MAAM,CAACW,CAAD,CAAN,CAAUT,KAA5B,CAAD,CAAf;AACA;AACD;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMW,gBAAgB,GAAG,CAACC,CAAD,EAAIX,IAAJ,KAAa;AACrCY,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAG,IAAAA,WAAW,CAACH,IAAD,CAAX;AACA,GAHD;;AAKA,sBACC;AAAA,cAEAE,QAAQ,KAAK,EAAb,GAEAL,MAAM,CAACiB,GAAP,CACCC,IAAI,iBAAE;AAAK,MAAA,OAAO,EAAEJ,CAAC,IAAID,gBAAgB,CAACC,CAAD,EAAII,IAAI,CAACf,IAAT,CAAnC;AAAA,6BAAmD,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEe,IAAI,CAAChB,KAA9B;AAAqC,QAAA,UAAU,EAAEgB,IAAI,CAACjB,KAAtD;AAA6D,QAAA,UAAU,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,YADP,CAFA,gBAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA,mBADD;AAaA,CAjCD;;GAAMG,I;;KAAAA,I;AAmCN,eAAeA,IAAf","sourcesContent":["import AnimateButton from \"../Components/AnimateButton\";\r\nimport { useState, useEffect} from \"react\";\r\n\r\n\r\nconst dishes = [\r\n\t{title:\"義大利麵\", image:\"./1.jpg\", type:\"主食\"}\r\n\r\n]\r\n\r\n\r\n\r\nconst Menu = () =>{\r\n\r\n\tconst [dishType, setDishType] = useState(\"\")\r\n\tconst [allTypeName, setAllTypeName] = useState([])\r\n\tconst [allTypeImage, setAllTypeImage] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tfor (let i = 0; i < dishes.length; i++){\r\n\t\t\tif(!dishes[i].type in allTypeName === false){\r\n\t\t\t\tsetAllTypeName([...allTypeName, dishes[i].type])\r\n\t\t\t\tsetAllTypeImage([...allTypeImage, dishes[i].image])\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst onClick_dishType = (e, type) => {\r\n\t\tconsole.log(type)\r\n\t\tsetDishType(type)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{\r\n\t\tdishType === \"\"\r\n\t\t?\r\n\t\tdishes.map(\r\n\t\t\tdish=><div onClick={e => onClick_dishType(e, dish.type)}><AnimateButton imageUrl={dish.image} imageTitle={dish.title} imageWidth={\"30%\"}></AnimateButton></div>) \r\n\t\t:\r\n\t\t<p>nothing</p>\r\n\t\t}\r\n\r\n\t\t</>\r\n\t)\t\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}